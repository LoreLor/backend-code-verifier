{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"DateResponse": {
				"properties": {
					"Date": {},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"Date",
					"message"
				],
				"type": "object"
			},
			"BasicResponse": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"description": "Para definir la estructura de mis datos: devuelve un json"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "backend-code-verifier",
		"version": "1.0.0",
		"description": "Node - Express - Typescript - Swagger ",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "LoreLor"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/users": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "All Users or User by Id",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Endpoint to retrieve the Users in the Collection \"users\" of DB",
				"tags": [
					"UsersController"
				],
				"security": [],
				"parameters": [
					{
						"description": "Id of user to retriev (optional)",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "delete user by id  message",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Endpoint to delete User in the Collection \"users\" of DB",
				"tags": [
					"UsersController"
				],
				"security": [],
				"parameters": [
					{
						"description": "Id of user to delete (optional)",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "User created in DB",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Endpoint to post a new User in the Collection \"users\" of DB",
				"tags": [
					"UsersController"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "Object created",
					"required": false,
					"content": {
						"application/json": {
							"schema": {
								"description": "Object created"
							}
						}
					}
				}
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "User updating in DB",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Endpoint to update an User in the Collection \"users\" of DB",
				"tags": [
					"UsersController"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "recives user Id and update Object user",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"description": "recives user Id and update Object user"
							}
						}
					}
				}
			}
		},
		"/api/goodbye": {
			"get": {
				"operationId": "GetMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DateResponse"
								}
							}
						}
					}
				},
				"tags": [
					"GoodbyeController"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/hello": {
			"get": {
				"operationId": "GetMessage",
				"responses": {
					"200": {
						"description": "Promise de BasicResponse",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BasicResponse"
								}
							}
						}
					}
				},
				"description": "Endpoint que devuelve un mensaje Hello {name} en json",
				"tags": [
					"HelloController"
				],
				"security": [],
				"parameters": [
					{
						"description": "nombre dado desde query",
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}